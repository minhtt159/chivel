---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  # Directories
  ANSIBLE_DIR: "{{.ROOT_DIR}}/ansible"
  PRIVATE_DIR: "{{.ROOT_DIR}}/.private"
  BOOTSTRAP_DIR: "{{.ROOT_DIR}}/bootstrap"
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"

  # Files
  BOOTSTRAP_CONFIG_FILE: "{{.BOOTSTRAP_DIR}}/vars/config.yaml"
  PIP_REQUIREMENTS_FILE: "{{.BOOTSTRAP_DIR}}/requirements.txt"
  MAKEJINJA_CONFIG_FILE: "{{.ROOT_DIR}}/makejinja.toml"
  AGE_FILE: "{{.ROOT_DIR}}/age.key"
  KUBECONFIG_FILE: "{{.ROOT_DIR}}/kubeconfig"
  # Binaries
  PYTHON_BIN: python3

env:
  KUBECONFIG: "{{.KUBECONFIG_FILE}}"
  PYTHONDONTWRITEBYTECODE: "1"
  SOPS_AGE_KEY_FILE: "{{.AGE_FILE}}"
  VIRTUAL_ENV: "{{.ROOT_DIR}}/.venv"

includes:
  ansible: .taskfiles/ansible/Taskfile.yml
  workstation: .taskfiles/workstation/Taskfile.yml
  sops: .taskfiles/sops/Taskfile.yml
  flux: .taskfiles/flux/Taskfile.yaml
  kubernetes:
    aliases: ["k8s"]
    taskfile: .taskfiles/kubernetes/Taskfile.yaml
  repository:
    aliases: ["repo"]
    taskfile: .taskfiles/repository/Taskfile.yaml
  k0s: .taskfiles/K0s/Taskfile.yaml

tasks:
  default: task -l

  init:
    desc: Initialize configuration files
    cmds:
      - mkdir -p {{.PRIVATE_DIR}}
      - cp -n {{.BOOTSTRAP_CONFIG_FILE | replace ".yaml" ".sample.yaml"}} {{.BOOTSTRAP_CONFIG_FILE}}
      - cmd: echo === Configuration file copied ===
        silent: true
      - cmd: echo Proceed with updating the configuration files...
        silent: true
      - cmd: echo {{.BOOTSTRAP_CONFIG_FILE}}
        silent: true
    status:
      - test -f "{{.BOOTSTRAP_CONFIG_FILE}}"

  configure:
    desc: Configure repository from bootstrap vars
    prompt: Any conflicting config in the root kubernetes and ansible directories will be overwritten... continue?
    deps: ["workstation:direnv", "workstation:venv", "sops:age-keygen", "init"]
    cmds:
      - task: .template
      - task: sops:encrypt
      - task: .validate

  .template:
    internal: true
    cmd: "{{.VIRTUAL_ENV}}/bin/makejinja"
    preconditions:
      - { msg: "Missing virtual environment", sh: "test -d {{.VIRTUAL_ENV}}" }
      - {
          msg: "Missing Makejinja config file",
          sh: "test -f {{.MAKEJINJA_CONFIG_FILE}}",
        }
      - {
          msg: "Missing Makejinja plugin file",
          sh: "test -f {{.BOOTSTRAP_DIR}}/scripts/plugin.py",
        }
      - {
          msg: "Missing bootstrap config file",
          sh: "test -f {{.BOOTSTRAP_CONFIG_FILE}}",
        }

  .validate:
    internal: true
    cmds:
      - task: kubernetes:kubeconform
